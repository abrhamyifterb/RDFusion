{
	"name": "rdfusion",
	"description": "RDFusion brings RDF editing and validation directly into VS Code.",
	"author": "RDFusion",
	"license": "MIT",
	"version": "1.0.4",
	"repository": {
		"type": "git",
		"url": "https://github.com/abrhamyifterb/RDFusion"
	},
	"publisher": "RDFusion",
	"workspaces": [
		"client",
		"server"
	],
	"icon": "resources/logo.png",
	"categories": [],
	"keywords": [
		"rdf",
		"turtle",
		"jsonld",
		"lsp"
	],
	"engines": {
		"vscode": "^1.75.0"
	},
	"main": "out/extension.js",
	"activationEvents": [
		"onLanguage:turtle",
		"onLanguage:jsonld"
	],
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "RDFusion",
					"title": "RDFusion",
					"icon": "resources/logo.png"
				}
			]
		},
		"views": {
			"RDFusion": [
				{
					"id": "fileExplorer",
					"name": "Files"
				}
			]
		},
		"languages": [
			{
				"id": "turtle",
				"extensions": [
					".ttl"
				],
				"aliases": [
					"Turtle"
				]
			},
			{
				"id": "jsonld",
				"extensions": [
					".jsonld"
				],
				"aliases": [
					"JSON-LD",
					"jsonld"
				]
			}
		],
		"grammars": [
			{
				"language": "jsonld",
				"scopeName": "source.json",
				"path": "./syntaxes/json.tmLanguage.json"
			}
		],
		"commands": [
			{
				"command": "rdfusion.openFile",
				"title": "RDFusion: Open File"
			},
			{
				"command": "rdfusion.refreshExplorer",
				"title": "RDFusion: Refresh Explorer"
			},
			{
				"command": "rdfusion.configureTurtleValidations",
				"title": "RDFusion: Toggle Turtle Validations"
			},
			{
				"command": "rdfusion.configureTurtleAutocomplete",
				"title": "RDFusion: Toggle Autocomplete"
			},
			{
				"command": "rdfusion.configureJsonldValidations",
				"title": "RDFusion: Toggle JSONLD Validations"
			},
			{
				"command": "rdfusion.configureIriSchemeValidation",
				"title": "RDFusion: IRI Scheme Validation Configuration"
			},
			{
				"command": "rdfusion.formatTriples",
				"title": "RDFusion: Turtle Formatter",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.configureTurtleFormatting",
				"title": "RDFusion: Turtle Formatter Configuration"
			},
			{
				"command": "rdfusion.groupBySubject",
				"title": "RDFusion: Group By Subject",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.filterTriples",
				"title": "RDFusion: Filter Triples By Subject-Predicate-Object"
			},
			{
				"command": "rdfusion.filterTriplesBySubject",
				"title": "RDFusion: Filter Triples By Subject Only"
			},
			{
				"command": "rdfusion.filterTriplesByPredicate",
				"title": "RDFusion: Filter Triples By Predicate Only"
			},
			{
				"command": "rdfusion.filterTriplesByObject",
				"title": "RDFusion: Filter Triples By Object Only"
			},
			{
				"command": "rdfusion.frameJsonld",
				"title": "RDFusion: Frame Jsonld From Template",
				"enablement": "editorLangId == jsonld"
			},
			{
				"command": "rdfusion.toggleIriShorten",
				"title": "RDFusion: Toggle IRI Shortening",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.setIriMaxLength",
				"title": "RDFusion: Set IRI Shorten Length",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.toggleOneIri",
				"title": "RDFusion: Toggle One IRI",
				"when": "false"
			},
			{
				"command": "rdfusion.generateVoID",
				"title": "RDFusion: Generate VoID"
			},
			{
				"command": "rdfusion.mergeFiles",
				"title": "RDFusion: Merge Files"
			}, 
			{
				"command": "rdfusion.sortBySubjectAsc",
				"title": "RDFusion: Sort Triples by Subject Ascending",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.sortByPredicateAsc",
				"title": "RDFusion: Sort Predicates within Subject Ascending",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.sortBySubjectDesc",
				"title": "RDFusion: Sort Triples by Subject Descending",
				"enablement": "editorLangId == turtle"
			},
			{
				"command": "rdfusion.sortByPredicateDesc",
				"title": "RDFusion: Sort Predicates within Subject Descending",
				"enablement": "editorLangId == turtle"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "rdfusion.openFile",
					"when": "false"
				},
				{
					"command": "rdfusion.toggleOneIri",
					"when": "false"
				},
				{
					"command": "rdfusion.refreshExplorer",
					"when": "false"
				}
			],
			"view/item/context": [
				{
					"command": "rdfusion.mergeFiles",
					"when": "view == fileExplorer && viewItem == file",
					"group": "navigation"
				}
			],
			"explorer/context": [
				{
					"command": "rdfusion.mergeFiles",
					"when": "resourceExtname =~ /\\.(ttl|jsonld)$/i",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"title": "RDFusion configurations",
			"properties": {
				"rdfusion.turtle.validations": {
					"type": "object",
					"description": "Enable or disable each validation rule for turtle (TTL)",
					"default": {
						"xsdTypeCheck": true,
						"missingTagCheck": true,
						"shaclConstraint": true,
						"duplicateTriple": true
					},
					"properties": {
						"rdfusion.turtle.validations.xsdTypeCheck": {
							"type": "boolean",
							"default": true,
							"description": "Enable xsd type check validation"
						},
						"rdfusion.turtle.validations.missingTagCheck": {
							"type": "boolean",
							"label": "Enable checking missing language tag or datatype ",
							"default": true,
							"description": "Enable checking missing language tag or datatype"
						},
						"rdfusion.turtle.validations.shaclConstraint": {
							"type": "boolean",
							"default": true,
							"description": "Enable shacl validation"
						},
						"rdfusion.turtle.validations.duplicateTriple": {
							"type": "boolean",
							"default": true,
							"description": "Enable duplicate triple validation"
						}
					}
				},
				"rdfusion.turtle.autocomplete": {
					"type": "object",
					"description": "Enable or disable each validation rule for turtle (TTL)",
					"default": {
						"localBased": true,
						"remoteBased": true,
						"prefixDeclaration": true
					},
					"properties": {
						"rdfusion.turtle.autocomplete.localBased": {
							"type": "boolean",
							"default": true,
							"description": "Enable local terms autocomplete"
						},
						"rdfusion.turtle.autocomplete.remoteBased": {
							"type": "boolean",
							"default": true,
							"description": "Enable remote terms autocomplete"
						},
						"rdfusion.turtle.autocomplete.prefixDeclaration": {
							"type": "boolean",
							"default": true,
							"description": "Enable declaring unimported prefix"
						}
					}
				},
				"rdfusion.jsonld.validations": {
					"type": "object",
					"description": "Enable or disable each validation rule for jsonld",
					"default": {
						"duplicateId": true,
						"missingType": true,
						"undefinedPrefix": true,
						"missingTagCheck": true,
						"xsdTypeCheck": true,
						"emptyLiteral": true,
						"nonStringLiteral": true,
						"shaclConstraint": true,
						"duplicateTriple": true
					},
					"properties": {
						"rdfusion.jsonld.validations.duplicateId": {
							"type": "boolean",
							"default": true,
							"description": "Warning on repeated @id"
						},
						"rdfusion.jsonld.validations.missingType": {
							"type": "boolean",
							"default": true,
							"description": "Warning on nodes without explicit @type"
						},
						"rdfusion.jsonld.validations.undefinedPrefix": {
							"type": "boolean",
							"default": true,
							"description": "Warning on usage of prefixes not in the context"
						},
						"rdfusion.jsonld.validations.missingTagCheck": {
							"type": "boolean",
							"default": true,
							"description": "Warning on missing @type/@language for @value"
						},
						"rdfusion.jsonld.validations.xsdTypeCheck": {
							"type": "boolean",
							"default": true,
							"description": "XSD-Datatype validation"
						},
						"rdfusion.jsonld.validations.emptyLiteral": {
							"type": "boolean",
							"default": true,
							"description": "Warning on empty string literals"
						},
						"rdfusion.jsonld.validations.nonStringLiteral": {
							"type": "boolean",
							"default": true,
							"description": "Warning on literals missing datatype or language"
						},
						"rdfusion.jsonld.validations.shaclConstraint": {
							"type": "boolean",
							"default": true,
							"description": "SHACL constraint enforcement"
						},
						"rdfusion.jsonld.validations.duplicateTriple": {
							"type": "boolean",
							"default": true,
							"description": "Enable duplicate triple validation"
						}
					}
				},
				"rdfusion.jsonld.autocomplete": {
					"type": "object",
					"description": "Enable or disable each validation rule for JSONLD",
					"default": {
						"localBased": true,
						"remoteBased": true,
						"prefixDeclaration": true
					},
					"properties": {
						"rdfusion.jsonld.autocomplete.localBased": {
							"type": "boolean",
							"default": true,
							"description": "Enable local terms autocomplete"
						},
						"rdfusion.jsonld.autocomplete.remoteBased": {
							"type": "boolean",
							"default": true,
							"description": "Enable syntax validation"
						},
						"rdfusion.jsonld.autocomplete.prefixDeclaration": {
							"type": "boolean",
							"default": true,
							"description": "Enable naming validation"
						}
					}
				},
				"rdfusion.turtle.irishorten.enabled": {
					"type": "boolean",
					"default": false,
					"description": "Enable automatic IRI shortening in Turtle."
				},
				"rdfusion.turtle.irishorten.maxLength": {
					"type": "number",
					"default": 30,
					"minimum": 7,
					"description": "Maximum IRI length before collapsing."
				},
				"rdfusion.turtle.formatting": {
					"type": "object",
					"description": "Enable or disable each Turtle formatting rule",
					"default": {
						"breakSubject":             true,
						"blankLineBetweenSubjects": true,
						"breakPredicates":          true,
						"breakObjects": 			false,
						"breakPredObj":             true,
						"useKnownPrefixes":         true,
						"useUntypedNumeric":        true,
						"compactSingletonLists":    true,
						"indentSize":               2
					},
					"properties": {
						"rdfusion.turtle.formatting.breakSubject": {
							"type": "boolean",
							"default": true,
							"description": "Place subject on its own line"
						},
						"rdfusion.turtle.formatting.blankLineBetweenSubjects": {
							"type": "boolean",
							"default": true,
							"description": "Insert extra blank line between subject blocks"
						},
						"rdfusion.turtle.formatting.breakPredicates": {
							"type": "boolean",
							"default": true,
							"description": "Place each predicate-object pair on its own line"
						},
						"rdfusion.turtle.formatting.breakObjects": {
							"type": "boolean",
							"default": false,
							"description": "Split comma-separated object lists across lines"
						},
						"rdfusion.turtle.formatting.useKnownPrefixes": {
							"type": "boolean",
							"default": true,
							"description": "Refactor full IRIs into prefix form if known"
						},
						"rdfusion.turtle.formatting.compactSingletonLists": {
							"type": "boolean",
							"default": true,
							"description": "Render single-element lists as “(item)”"
						},
						"rdfusion.turtle.formatting.indentSize": {
							"type": "number",
							"default": 2,
							"description": "Spaces per indent level for predicate lines"
						},
						"rdfusion.turtle.formatting.useUntypedNumeric": {
							"type": "boolean",
							"default": true,
							"description": "Emit numeric/boolean literals untyped"
						},
						"rdfusion.turtle.formatting.breakPredObj": {
							"type": "boolean",
							"default": false,
							"description": "Align predicates and objects in columns"
						}
					}
				},
				"rdfusion.common.validations": {
					"type": "object",
					"description": "Enable or disable IRI scheme validation and set custom whitelist",
					"default": {
						"iriSchemeCheck": true,
						"strictSchemeCheck": false,
						"customIriScheme": "http, https, mailto, tel"
					},
					"properties": {
						"rdfusion.common.iriSchemeCheck": {
							"type": "boolean",
							"default": true,
							"description": "Check for non-standard or uncommon IRI schemes"
						},
						"rdfusion.common.strictSchemeCheck": {
							"type": "boolean",
							"label": "Enable strict mode to only allow custom defined IRI schemes",
							"default": false,
							"description": "Enable strict mode to only allow custom defined IRI schemes"
						},
						"rdfusion.common.customIriScheme": {
							"type": "string",
							"default": "http, https, mailto, tel",
							"description": "Define a custom comma separated whitelist of allowed IRI schemes, like http, https, mailto, tel"
						}
					}
				}
			}
		}
	},
	"scripts": {
		"build:server": "esbuild ./server/src/server.ts --bundle --platform=node --format=cjs --outfile=out/server.js --external:ky-universal --external:vscode --minify",
		"build:client": "esbuild ./client/src/extension.ts --bundle --platform=node --target=node16 --outfile=out/extension.js --external:vscode --minify",
		"build": "npm run build:client && npm run build:server",
		"prepackage": "npm run build",
		"package": "vsce package --dependencies -o rdfusion-1.0.0.vsix",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"lint": "eslint",
		"test": "sh ./scripts/e2e.sh"
	},
	"devDependencies": {
		"@eslint/js": "^9.13.0",
		"@stylistic/eslint-plugin": "^2.9.0",
		"@types/mocha": "^10.0.6",
		"@types/node": "^20",
		"@types/rdf-ext": "^2.5.2",
		"electron-rebuild": "^3.2.9",
		"esbuild": "^0.25.4",
		"eslint": "^9.13.0",
		"mocha": "^10.3.0",
		"typescript": "^5.8.2",
		"typescript-eslint": "^8.26.0"
	},
	"dependencies": {
		"@comunica/query-sparql": "^4.0.2",
		"@comunica/types": "^4.2.0",
		"@rdfjs/data-model": "^2.1.0",
		"@rdfjs/dataset": "^2.0.2",
		"@rdfjs/parser-n3": "^2.1.0",
		"@rdfjs/types": "^2.0.1",
		"@types/node-fetch": "^2.6.12",
		"@zazuko/env-node": "^3.0.0",
		"bcp-47": "^2.1.0",
		"glob": "^11.0.0",
		"jsonc-parser": "^3.2.1",
		"jsonld": "^8.3.3",
		"lru-cache": "^11.1.0",
		"millan": "^5.4.0",
		"n3": "^1.24.2",
		"node-fetch": "^3.3.2",
		"rdf-dereference": "^4.0.0",
		"rdf-ext": "^2.5.2",
		"shacl-engine": "^1.0.2",
		"vscode-languageclient": "^9.0.1",
		"vscode-languageserver": "^9.0.1",
		"vscode-languageserver-textdocument": "^1.0.11"
	}
}
